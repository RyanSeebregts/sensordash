{"version":3,"sources":["firebase.tsx","components/TextInput.tsx","components/Button.tsx","colors.js","components/LoginPage.tsx","components/BarGraph.tsx","components/DownloadScreen.tsx","components/Dashboard.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","getDatabase","Container","styled","input","TextInput","props","value","placeholder","type","onChange","setValue","div","Button","onClick","clicked","style","background","color","textColor","colors","primary","darkPurple","purple","darkBlue","blue","green","red","yellow","pink","black","lightRed","bcryptjs","require","LoginWindow","RegisterWindow","LoginPage","useState","loginOpen","setLoginOpen","users","setUsers","loginUsername","setLoginUsername","loginPassword","setLoginPassword","loginError","setLoginError","regUsername","setRegUsername","regPassword","setRegPassword","regError","setRegError","loading","setLoading","registerDone","setRegisterDone","timer","useEffect","usersRef","ref","onValue","snapshot","exists","console","log","val","newUsernames","key","username","push","clearTimeout","fontSize","fontWeight","marginBottom","e","target","height","width","display","alignItems","justifyContent","cursor","marginTop","top","position","opacity","a","userCorrect","forEach","el","hashIt","salt","hashLogin","password","setLoggedIn","usernameUsed","getSalt","passHash","setTimeout","genSalt","hash","hashed","BarGraph","data","labels","datasets","backgroundColor","average","options","maintainAspectRatio","plugins","legend","title","text","Background","Window","Heading","Content","ContentBoxes","Labels","TextBoxes","csvData","DownloadScreen","d","Date","start","setStart","end","setEnd","error","setError","csv","setCsv","downloadCsv","setDownloadCsv","close","getDateString","getFullYear","getMonth","getDate","sensorsRef","get","then","sens","newCsv","str","split","senseTime","co","nir","clear","f1","f2","f3","f4","f5","f6","f7","f8","newRow","length","calculateCSVData","filename","yearStr","monthStr","toString","dayStr","parseInt","finalString","colorsArr","NavBar","NavContent","WaveContentContainer","WaveContent","WaveGraphContainer","CsvButton","Dashboard","downloadOpen","setDownloadOpen","paddingLeft","lastUpdated","currentTime","toISOString","substring","paddingRight","logout","waveSamples","map","prop","flexShrink","name","samples","coAverage","coSamples","marginLeft","waveSampleTemp","App","loggedIn","setCoSamples","setCoAverage","setWaveSamples","setLastUpdated","cnt","newCoSamples","concat","newWaves","lastTime","getTime","newCo","setWave","setCo","timeStr","arr","total","avg","index","num","i","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9e22efc.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getDatabase } from \"firebase/database\";\n\nconst firebaseConfig =  {\n    apiKey: \"AIzaSyArcHR-u520-pvwa75P9dTqmn9Q-0xuQfk\",\n    authDomain: \"testsensor-50e80.firebaseapp.com\",\n    databaseURL: \"https://testsensor-50e80-default-rtdb.europe-west1.firebasedatabase.app\",\n    projectId: \"testsensor-50e80\",\n    storageBucket: \"testsensor-50e80.appspot.com\",\n    messagingSenderId: \"15455856559\",\n    appId: \"1:15455856559:web:2b0ce1e3f3a8fd206b315a\"\n};\n\nconst app = initializeApp(firebaseConfig);\n\nconst db = getDatabase(app);\n\nexport default db","import React, {useEffect, useState, useContext} from 'react';\nimport styled from 'styled-components'\n\nconst Container = styled.input`\n  height: 100%;\n  width: 100%;\n  outline: none;\n  background: transparent;\n  border: 2px solid darkgrey;\n  border-radius: 5px;\n  padding: 5px 7px;\n  margin: 0px;\n`\n\ninterface propTypes {\n    value: any\n    placeholder: string\n    type: string\n    setValue: any\n}\n\n\nfunction TextInput(props:propTypes) {\n\n\n  return (\n    <Container\n        value={props.value}\n        placeholder={props.placeholder}\n        type={props.type}\n        onChange={props.setValue}\n    />\n  );\n}\n\nexport default TextInput;","import React, {useEffect, useState, useContext} from 'react';\nimport styled from 'styled-components'\nimport { Bar } from 'react-chartjs-2';\n\nconst Container = styled.div`\n  padding: 7px 10px;\n  border-radius: 5px;\n  cursor: pointer;\n`\n\ninterface propTypes {\n    value: string\n    color: string\n\n    clicked: any\n    textColor?:string\n}\n\n\nfunction Button(props:propTypes) {\n\n\n  return (\n    <Container\n        \n        onClick={props.clicked}\n        style={{\n            background: props.color || 'lightgrey',\n            color: props.textColor || 'black'\n        }}\n    >\n        {props.value}\n    </Container>\n  );\n}\n\nexport default Button;\n\n\n","const colors = {\n    primary: '#FF6F3C',\n\n    darkPurple: '#3E2F5B',\n    purple: '#E8C7DE',\n\n    darkBlue: '#345995',\n    blue: '#86BBD8',\n    green: '#DCF2B0',\n    red: '#880D1E',\n    yellow: '#FFCF00',\n    pink: '#CC59D2',\n    black: '#262626',\n    lightRed: '#EF2917'\n\n}\n\nexport default colors","import React, {useEffect, useState, useContext} from 'react';\nimport styled from 'styled-components'\n\n\nimport db from '../firebase';\nimport { ref, child, get, onValue, push } from \"firebase/database\";\nimport TextInput from './TextInput';\nimport Button from './Button';\nimport colors from '../colors';\nconst bcryptjs = require('bcryptjs');\n\nconst Container = styled.div`\n  position: fixed;\n  height: 100%;\n  width: 100%;\n  background: #eeeeee;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst LoginWindow = styled.div`\n  padding: 20px 20px;\n  min-width: 300px;\n  background: white;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n`\n\nconst RegisterWindow = styled.div`\n  position: relative;\n  padding: 20px 20px;\n  min-width: 300px;\n  background: white;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n`\n\ninterface propTypes {\n  setLoggedIn: any\n}\n\nfunction LoginPage(props: propTypes) {\n  const [loginOpen, setLoginOpen] = useState(true)\n\n  const [users, setUsers] = useState<any[]>([])\n\n\n  const [loginUsername, setLoginUsername] = useState('')\n  const [loginPassword, setLoginPassword] = useState('')\n  const [loginError, setLoginError] = useState('')\n\n\n  const [regUsername, setRegUsername] = useState('')\n  const [regPassword, setRegPassword] = useState('')\n  const [regError, setRegError] = useState('')\n\n  const [loading, setLoading] = useState(false)\n  const [registerDone, setRegisterDone] = useState(false)\n\n  let timer:any = null\n\n  useEffect(() => {\n    const usersRef = ref(db, 'Users/');\n\n    onValue(usersRef, (snapshot:any) => {\n      if(snapshot.exists()) {\n        console.log(snapshot.val())\n\n        let users = snapshot.val()\n        let newUsernames = []\n\n        for (var key in users) {\n          let username:string = users[key]\n          newUsernames.push(username)\n        }\n        setUsers(newUsernames)\n      }\n\n      \n    })\n\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [])\n\n\n\n  return (\n    <Container>\n\n      {\n        loginOpen ?\n          <LoginWindow>\n          <div style={{fontSize: '25px', fontWeight: 'bold', marginBottom: '20px'}}>Login</div>\n\n          <TextInput\n            value={loginUsername}\n            setValue={setLoginUsernameHelper}\n            type={'text'}\n            placeholder={\"username\"}\n          />\n\n          <div style={{height: '20px'}} />\n\n          <TextInput\n            value={loginPassword}\n            setValue={setLoginPasswordHelper}\n            type={'password'}\n            placeholder={\"password\"}\n          />\n\n          <div style={{height: '40px', width: '100%', display:'flex', alignItems: 'center', justifyContent: 'center'}}>\n          {loginError}\n          </div>\n\n          <Button \n            clicked={login}\n            value={'login'}\n            color={colors.primary}\n          />\n\n          <div onClick={() => setLoginOpen(false)} style={{cursor: 'pointer', marginTop: '10px'}}>register</div>\n\n          </LoginWindow>\n\n          :\n\n          <RegisterWindow>\n            <div style={{fontSize: '25px', fontWeight: 'bold', marginBottom: '20px'}}>Register</div>\n\n            <TextInput\n              value={regUsername}\n              setValue={setRegUsernameHelper}\n              type={'text'}\n              placeholder={\"username\"}\n            />\n\n            <div style={{height: '20px'}} />\n\n            <TextInput\n              value={regPassword}\n              setValue={setRegPasswordHelper}\n              type={'password'}\n              placeholder={\"password\"}\n            />\n\n            <div style={{height: '40px', width: '100%', display:'flex', alignItems: 'center', justifyContent: 'center'}}>\n            {regError}\n            </div>\n\n            <Button \n              clicked={register}\n              value={'register'}\n              color={colors.primary}\n            />\n\n            <div onClick={() => setLoginOpen(true)} style={{cursor: 'pointer', marginTop: '10px'}}>go to login</div>\n\n            {\n              loading &&\n                <div \n                  style={{\n                    top: '0px',\n                    position: 'absolute',\n                    height: '100%',\n                    width: '100%',\n                    background: 'black',\n                    opacity: 0.6\n                  }} \n                />\n            }\n\n            {\n              registerDone &&\n                <div \n                  style={{\n                    position: 'absolute',\n                    height: '100%',\n                    width: '100%',\n                    top: '0px',\n                    background: 'white',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    fontSize: '25px',\n                    fontWeight: 'bold',\n                  }}\n                >\n                  user registered\n                </div>\n            }\n\n          </RegisterWindow>\n      }\n\n    </Container>\n  );\n\n  function setLoginUsernameHelper(e:any) {\n    setLoginUsername(e.target.value)\n  }\n  function setLoginPasswordHelper(e:any) {\n    setLoginPassword(e.target.value)\n  }\n\n  function setRegUsernameHelper(e:any) {\n    setRegUsername(e.target.value)\n  }\n  function setRegPasswordHelper(e:any) {\n    setRegPassword(e.target.value)\n  }\n\n  async function login() {\n    console.log(users)\n    setLoginError('')\n\n    let userCorrect = false\n    users.forEach(async (el:any) => {\n      if(el.username === loginUsername) {\n        let hashLogin = await hashIt(loginPassword, el.salt)\n        console.log(hashLogin)\n\n        if(hashLogin === el.password) {\n          props.setLoggedIn(true)\n          userCorrect = true\n          return\n        }\n      }\n    })\n    if(!userCorrect)\n      setLoginError('username or password incorrect')\n  }\n\n  async function register() {\n    setLoading(true)\n    setRegError('')\n\n    let usernameUsed = false\n    users.forEach((el:any) => {\n      if(el.username === regUsername) {\n        usernameUsed = true\n      }\n    })\n\n    if(usernameUsed) {\n      setLoading(false)\n\n      setRegError('username used')\n      return\n    }\n\n    let salt = await getSalt()\n    let passHash = await hashIt(regPassword, salt)\n\n    const usersRef = ref(db, 'Users/');\n\n    push(usersRef, {\n      username: regUsername,\n      password: passHash,\n      salt : salt\n    });\n    setRegisterDone(true)\n\n    timer = setTimeout(() => {\n      setLoading(false)\n      setLoginOpen(true)\n      setRegisterDone(false)\n    }, 2000)\n  }\n\n  async function getSalt() {\n    const salt = await bcryptjs.genSalt(6);\n    return salt\n  }\n  async function hashIt(password:string, salt:any){\n    const hashed = await bcryptjs.hash(password, salt);\n    return hashed\n  }\n}\n\nexport default LoginPage;\n\n\n","import React, {useEffect, useState, useContext} from 'react';\nimport styled from 'styled-components'\nimport { Bar } from 'react-chartjs-2';\n\nconst Container = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\ninterface propTypes {\n    title: string\n    average: number\n    value: number\n    color: string\n}\n\n\nfunction BarGraph(props:propTypes) {\n\n\n  return (\n    <Container>\n        <Bar \n            data={\n                {\n                    labels: ['current', 'average'],\n                    datasets: [{\n                        backgroundColor: [props.color, 'lightgrey'],\n                        data: [\n                            props.value,\n                            props.average\n                        ]\n                    }]\n                }\n            } \n            options={\n                {\n                    maintainAspectRatio: false,\n                    plugins:{   \n                        legend: {\n                          display: false\n                        },\n                        title: {\n                            display: true,\n                            text: props.title   \n                        }\n                    },\n                }\n            } \n            width={100} \n            height={100}\n        />\n    </Container>\n  );\n}\n\nexport default BarGraph;\n\n\n","import React, {useEffect, useState, useContext} from 'react';\nimport styled from 'styled-components'\nimport { Bar } from 'react-chartjs-2';\nimport TextInput from './TextInput';\nimport Button from './Button';\nimport { ref, child, get } from \"firebase/database\";\nimport db from '../firebase';\nimport { CSVDownload } from \"react-csv\";\n\nconst Container = styled.div`\n    position: fixed;\n    height: 100%;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nconst Background = styled.div`\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    background: black;\n    opacity: 0.6;\n    z-index: 0;\n`\n\nconst Window = styled.div`\n    z-index: 1;\n    height: 300px;\n    max-height: calc(100% - 100px);\n    max-width: calc(100% - 100px);\n    width: 500px;\n    background: white;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    border-radius: 10px;\n`\nconst Heading = styled.div`\n    height: 20%;\n    font-size: 25px;\n    font-weight: bold;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-shrink: 0;\n\n`\n\nconst Content = styled.div`\n    width: calc(100% - 100px);\n    display: flex;\n    flex-grow: 1;\n    flex-shrink: 0;\n\n`\n\nconst ContentBoxes = styled.div`\n    width: calc(50% - 20px);\n    display: flex;\n    flex-direction: column;\n    align-items: center\n`\n\nconst Labels = styled.div`\n    margin: 20px 0px;\n`\n\nconst TextBoxes = styled.div`\n    width: calc(100% - 20px);\n`\n\nconst csvData = [\n    [\"time\", \"CO2\", \"NIR\", \"Clear\", \"F1 415nm\", \"F2 445nm\", \"F3 480nm\", \"F4 515nm\", \"F5 555nm\", \"F6 590nm\", \"F7 630nm\", \"F8 680nm\"],\n];\n\ninterface propTypes {\n    close: any\n}\n\n\nfunction DownloadScreen(props:propTypes) {\n    const d = new Date()\n    const [start, setStart] = useState(d)\n    const [end, setEnd] = useState(d)\n    const [error, setError] = useState('')\n\n    const [csv, setCsv] = useState<any>(csvData)\n    const [downloadCsv, setDownloadCsv] = useState(false)\n\n    return (\n        <Container>\n            <Background \n                onClick={props.close}\n            />\n            \n            <Window>\n                <Heading>Download CSV</Heading>\n\n                <Content>\n                    <ContentBoxes>\n                        <Labels>from</Labels>\n                        <TextBoxes>\n                            <TextInput\n                                value={getDateString(start)}\n                                placeholder={\"dd/mm/yy\"}\n                                type={'date'}\n                                setValue={setStartDate}\n                            />\n                        </TextBoxes>\n\n                    </ContentBoxes>\n\n                    <div style={{width: '40px'}} />\n\n                    <ContentBoxes>\n                        <Labels>to</Labels>\n                        <TextBoxes>\n                            <TextInput\n                                value={getDateString(end)}\n                                placeholder={\"dd/mm/yy\"}\n                                type={'date'}\n                                setValue={setEndDate}\n\n                            />\n                        </TextBoxes>\n\n                    </ContentBoxes>\n\n                </Content>\n\n                <div style={{marginTop: '10px'}}>\n\n                    {error}\n                </div>\n\n                <div style={{marginTop: '20px', marginBottom: '20px'}}>\n\n                    <Button \n                        value={\"download csv\"}\n                        clicked={() => calculateCSVData()}\n                        color={\"lightgrey\"}\n                    />\n                </div>\n                \n\n            </Window>\n\n            {\n                downloadCsv &&\n                    <CSVDownload data={csv} target=\"_blank\" filename={\"wavedata.csv\"} />\n\n            }\n\n        </Container>\n    );\n\n    function getDateString(val: Date) {\n\n        let yearStr = val.getFullYear()\n        let monthStr:string = val.getMonth().toString()\n        let dayStr:string = val.getDate().toString()\n\n        if( parseInt(monthStr) < 10)\n            monthStr = \"0\" + monthStr\n        if( parseInt(dayStr) < 10)\n            dayStr = \"0\" + dayStr\n\n        let finalString =  yearStr+'-'+monthStr+'-'+dayStr\n\n        console.log(finalString)\n        return finalString\n\n\n\n    }\n\n    function setStartDate(val: any) {\n        console.log(end.getFullYear()+'-'+end.getMonth()+'-'+end.getDate())\n        let d = new Date(val.target.value)\n        setStart(d)\n    }\n    function setEndDate(val: any) {\n        let d = new Date(val.target.value)\n        setEnd(d)\n    }\n\n    function calculateCSVData() {\n        const sensorsRef = ref(db, 'Sensors/');\n        setDownloadCsv(false)\n\n\n        get( sensorsRef ).then((snapshot:any) => {\n            if (snapshot.exists()) {\n                setError('')\n\n                console.log(snapshot.val())\n                let sens = snapshot.val()\n\n                let newCsv = csvData\n\n                for (var key in sens) {\n                    let sensTimeStr = sens[key][\"Time\"]\n                    let str = sensTimeStr.split(',')\n                    let senseTime = new Date(\"20\"+str[0])\n                    console.log(senseTime)\n\n                    if(senseTime <= end && senseTime >= start) {\n                        let co:number = sens[key][\"Carbon dioxide\"]\n                        let nir:number = sens[key][\"NIR\"] * 100\n                        let clear:number = sens[key][\"Clear\"] * 100\n                        let f1:number = sens[key][\"F1 415nm\"] * 100\n                        let f2:number = sens[key][\"F2 445nm\"] * 100\n                        let f3:number = sens[key][\"F3 480nm\"] * 100\n                        let f4:number = sens[key][\"F4 515nm\"] * 100\n                        let f5:number = sens[key][\"F5 555nm\"] * 100\n                        let f6:number = sens[key][\"F6 590nm\"] * 100\n                        let f7:number = sens[key][\"F7 630nm\"] * 100\n                        let f8:number = sens[key][\"F8 680nm\"] * 100\n                        let time:string = sens[key][\"Time\"]\n                        \n                        let newRow:any = [\n                            time,\n                            co,\n                            nir,\n                            clear,\n                            f1,\n                            f2,\n                            f3,\n                            f4,\n                            f5,\n                            f6,\n                            f7,\n                            f8\n                        ]\n                        newCsv.push(newRow)\n                    }\n                }   \n                console.log(newCsv.length)\n\n                if(newCsv.length > 1) {\n                    setCsv(newCsv)\n                    setDownloadCsv(true)\n                }\n\n                else {\n                    setError('no data in this time period')\n                }\n            }\n\n            else {\n                setError('server error')\n\n            }\n        })\n    }\n}\n\nexport default DownloadScreen;\n\n\n","import React, {useEffect, useState, useContext} from 'react';\nimport styled from 'styled-components'\nimport BarGraph from './BarGraph';\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport colors from '../colors'\nimport DownloadScreen from './DownloadScreen';\nimport Button from './Button';\n\n\nconst colorsArr = [colors.darkPurple, colors.purple, colors.blue, colors.green, colors.darkBlue, colors.primary, colors.lightRed, colors.red, 'black', 'black']\n\nconst Container = styled.div`\n  position: fixed;\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n`\n\nconst NavBar = styled.div`\n  height: 60px;\n  width: 100%;\n  display: flex;\n  background: #eeeeee;\n  flex-shrink: 0;\n  justify-content: flex-end;\n  align-items: center;\n`\n\nconst NavContent = styled.div`\n  height: 100%;\n  width: calc(100% / 3);\n  display: flex;\n  align-items: center;\n`\n\nconst WaveContentContainer = styled.div`\n    background: #eeeeee;\n    width: 100%;\n    display: flex;\n    flex-grow: 1;\n    flex-shrink: 0;\n    display: flex;\n    justify-content: center;\n    align-items: flex-end;\n`\n\nconst WaveContent = styled.div`\n    width: calc(100% - 40px);\n    height: calc(100% - 0px);\n    background: white;\n    display: flex;\n    flex-shrink: 0;\n    display: flex;\n    flex-wrap:wrap;\n    justify-content: flex-start;\n    align-items: center;\n`\n\nconst WaveGraphContainer = styled.div`\n    width: calc(100% - 50px);\n    height: calc(100% - 50px);\n    flex-shrink: 0;\n`\n\nconst CsvButton = styled.div`\n  position: relative;\n    height: 100%;\n    width: 100%;\n    cursor: pointer;\n    font-size: 25px;\n    font-weight: bold;\n    display: flex;\n    justify-content: center;\n    fle-direction: column;\n    align-items: center;\n    transition: all 0.3s ease;\n    &:hover {\n        color: white;\n        background: ${colors.primary};\n    }\n \n`\ninterface propTypes {\n    coAverage: number\n    coSamples: number[]\n    waveSamples: any\n    logout: any\n    currentTime: Date\n    lastUpdated: string\n}\n\n\nfunction Dashboard(props:propTypes) {\n    const [downloadOpen, setDownloadOpen] = useState(false)\n\n  return (\n    <Container>\n        <NavBar>\n            <NavContent\n                style={{\n                    justifyContent: 'flex-start',\n                    paddingLeft: '20px',\n                    fontWeight: 'bold'\n                }}\n            >\n                {`Last updated: ${props.lastUpdated}`}\n            </NavContent>\n\n            <NavContent\n                style={{\n                    justifyContent: 'center',\n                    fontWeight: 'bold'\n\n                }}\n            >\n                {`Current time: ${timeString(props.currentTime)}`}\n            </NavContent>\n\n            <NavContent\n                style={{\n                    justifyContent: 'flex-end',\n                    paddingRight: '20px'\n                }}\n            >\n                <Button \n                    value={'logout'}\n                    clicked={props.logout}\n                    color={colors.primary}\n                    textColor={'white'}\n                />\n            </NavContent>\n        </NavBar>\n        \n        <WaveContentContainer>\n            <WaveContent>\n                {\n                    props.waveSamples.map((prop:any, key:number) => \n                        <div style={{width: 'calc(100% / 4)', height: 'calc(100% / 3)', flexShrink: 0, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n                            <WaveGraphContainer>\n                                <BarGraph\n                                    title={prop.name}\n                                    average={prop.average}\n                                    value={prop.samples[0]}\n                                    color={colorsArr[key]}\n                                />\n                            </WaveGraphContainer>\n                        </div> \n                    )\n                }\n\n                <div style={{width: 'calc(100% / 4)', height: 'calc(100% / 3)', flexShrink: 0, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n                    <WaveGraphContainer>\n                        <BarGraph\n                            title={'CO2 Graph'}\n                            average={props.coAverage}\n                            value={props.coSamples[0]}\n                            color={colors.primary}\n                        />\n                    </WaveGraphContainer>\n                </div> \n\n                <div style={{width: 'calc(100% / 4)', height: 'calc(100% / 3)', flexShrink: 0, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n                        \n                    <WaveGraphContainer>\n                        <CsvButton \n                            onClick={() => setDownloadOpen(true)}\n                        >\n                            <div>Download</div>\n                            <div>CSV</div>\n                        </CsvButton>\n                    </WaveGraphContainer>\n                </div> \n\n            </WaveContent>\n        </WaveContentContainer>\n\n        <div style={{\n            width: '100%', height: '30px', display: 'flex', alignItems: 'center', background: '#eeeeee'\n        }}>\n            <div style={{marginLeft: '20px', fontSize: '15px'}}>* all averages calculated using last 10 samples</div>\n        </div>\n\n                {/*\n        <BottomContent>\n            <COContent>\n                <div style={{height: '100%', aspectRatio: '1'}}>\n                    <BarGraph\n                        title={'CO2 Graph'}\n                        average={props.coAverage}\n                        value={props.coSamples[0]}\n                        color={colors.primary}\n                    />\n                </div>\n            </COContent>\n\n            <COContent>\n                <Button onClick={() => setDownloadOpen(true)}>Download CSV</Button>\n            </COContent>\n\n\n        </BottomContent>\n\n                */}\n            {\n                downloadOpen &&\n                    <DownloadScreen \n                        close={() => setDownloadOpen(false)}\n                    />\n            }\n        \n        \n    </Container>\n  );\n\n  function timeString(d: Date) {\n    let str = d.toISOString().substring(0, 10);\n    return str\n  }\n}\n\nexport default Dashboard;\n\n\n","import React, {useEffect, useState, useContext} from 'react';\nimport styled from 'styled-components'\nimport LoginPage from './components/LoginPage'\nimport Dashboard from './components/Dashboard'\n\nimport db from './firebase';\nimport { ref, child, get, onValue } from \"firebase/database\";\n\ninterface wavType {\n  name: string\n  samples: number[]\n  average: number\n}\n\nconst waveSampleTemp:wavType[] = [\n  {\n    name: '415nm',\n    samples: [],\n    average: 0,\n  },\n  {\n    name: '445nm',\n    samples: [],\n    average: 0,\n  },\n  {\n    name: '480nm',\n    samples: [],\n    average: 0,\n  },\n  {\n    name: '515nm',\n    samples: [],\n    average: 0,\n  },\n  {\n    name: '555nm',\n    samples: [],\n    average: 0,\n  },\n  {\n    name: '590nm',\n    samples: [],\n    average: 0,\n  },\n  {\n    name: '630nm',\n    samples: [],\n    average: 0,\n  },\n  {\n    name: '680nm',\n    samples: [],\n    average: 0,\n  },\n  {\n    name: 'Clear',\n    samples: [],\n    average: 0,\n  },\n  {\n    name: 'NIR',\n    samples: [],\n    average: 0,\n  },\n]\n\nfunction App() {\n  const d = new Date()\n  const [loggedIn, setLoggedIn] = useState(false)\n\n  const [coSamples, setCoSamples] = useState<number[]>([])\n  const [coAverage, setCoAverage] = useState<number>(0)\n\n  const [waveSamples, setWaveSamples] = useState(waveSampleTemp)\n\n  const [lastUpdated, setLastUpdated] = useState('')\n  const [currentTime, setCurrentTime] = useState(d)\n\n  useEffect(() => {\n    const sensorsRef = ref(db, 'Sensors/');\n\n    onValue(sensorsRef, async (snapshot:any) => {\n      if (snapshot.exists()) {\n        let sens = snapshot.val()\n\n        let cnt = 0\n\n        let blank:number[] = []\n        let newCoSamples = blank.concat(coSamples)\n\n        let blank2:wavType[] = []\n        let newWaves = blank2.concat(waveSamples)\n\n        for (var key in sens) {\n          \n          if(cnt === 10)\n            break\n\n          if(cnt === 0) {\n\n            let lastTime = getTime(sens[key][\"Time\"])\n            console.log(lastTime)\n            setLastUpdated(lastTime)\n          }\n          let newCo:number = sens[key][\"Carbon dioxide\"]\n          newCoSamples.push( newCo )\n\n          newWaves[0].samples.push(sens[key][\"F1 415nm\"] * 100) \n          newWaves[1].samples.push(sens[key][\"F2 445nm\"] * 100) \n          newWaves[2].samples.push(sens[key][\"F3 480nm\"] * 100) \n          newWaves[3].samples.push(sens[key][\"F4 515nm\"] * 100) \n          newWaves[4].samples.push(sens[key][\"F5 555nm\"] * 100) \n          newWaves[5].samples.push(sens[key][\"F6 590nm\"] * 100) \n          newWaves[6].samples.push(sens[key][\"F7 630nm\"] * 100) \n          newWaves[7].samples.push(sens[key][\"F8 680nm\"] * 100) \n          newWaves[8].samples.push(sens[key][\"Clear\"] * 100) \n          newWaves[9].samples.push(sens[key][\"NIR\"] * 100) \n\n          \n          cnt++\n        }\n        setWave(newWaves)\n\n        setCo(newCoSamples)\n      } else {\n        console.log(\"No data available\");\n      }\n    })\n\n\n    \n\n  }, [])\n\n  return (\n    \n      !loggedIn ? \n        <LoginPage\n          setLoggedIn={setLoggedIn}\n        />\n\n        :\n\n        <Dashboard \n          coAverage={coAverage}\n          coSamples={coSamples}\n          waveSamples={waveSamples}\n          logout={logout}\n          currentTime={currentTime}\n          lastUpdated={lastUpdated}\n        />\n  );\n\n  function getTime(d: string) {\n    let str = d.split(',')\n\n    let timeStr = str[1].split('+')\n    let senseTime = new Date(\"20\"+str[0])\n\n    return senseTime.toISOString().substring(0, 10) + \"  at  \" + timeStr[0]\n  }\n\n  function logout() {\n    setLoggedIn(false)\n  }\n\n  function setCo(arr:number[]) {\n    let total:number = 0;\n    arr.forEach((el:number) => {\n      total = total + el \n    })\n\n    let avg = total / arr.length\n\n    setCoSamples(arr)\n    setCoAverage(avg)\n\n  }\n\n  function setWave(arr:wavType[]) {\n    let avg:number[] = [0,0,0,0,0,0,0,0];\n\n    arr.forEach((el:wavType, index:number) => {\n      let total = 0\n      el.samples.forEach((num:number, index:number) => {\n        total = total + num\n      })\n      avg[index] = total/el.samples.length\n    })\n\n    let blank:wavType[] = []\n    let newWaves = blank.concat(arr)\n\n    for(let i = 0; i < newWaves.length; i++) {\n      newWaves[i].average = avg[i]\n    }\n\n    setWaveSamples(newWaves)\n\n  }\n}\n\nexport default App;\n\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}